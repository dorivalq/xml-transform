<?xml version="1.0" encoding="UTF-8"?><xs:schema targetNamespace="http://www.emeter.com/energyip/amiinterface" elementFormDefault="qualified" attributeFormDefault="unqualified" xmlns:tns="http://www.emeter.com/energyip/amiinterface" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:complexType name="IdentifiedObject">
		<xs:sequence>
			<xs:element name="mRID" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						Object instance identifier
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="idType" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation><![CDATA[
						Type of identifier. For e.g. for a Meter this
						can be METER_BADGE_ID or METER_UDC_ASSET_ID. For
						a meter communicaiton module this can be
						METER_COMMUNICATION_MODULE_NETWORK_ID
					]]></xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="pathName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation><![CDATA[
						The namespace within which the id is defined.
						Multiple tokens in the namespace can be
						separated by the forward slash character. The
						interpretation of namespace tokens is dependent
						on the type of identifier. For e.g. for
						METER_UDC_ASSET_ID namespace will be populated
						with the organisationCode (utility id)
					]]></xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CustomerAccount">
		<xs:complexContent>
			<xs:extension base="tns:IdentifiedObject">
				<xs:sequence>
					<xs:element name="billingCycle" type="xs:string">
						<xs:annotation>
							<xs:documentation><![CDATA[
								Billing cycle identifies cycle day on
								which the related Customer Account will
								normally be billed. It is used in
								determining when to produce the billing
								statement for the Customer Account.
							]]></xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Asset">
		<xs:annotation>
			<xs:documentation>
				A tangible resource of the utility, like equipment like
				Meter, ComFunction etc. This is the parent class for
				asset sub classes.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="tns:IdentifiedObject">
				<xs:sequence>
					<xs:element name="manufacturer" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Manufacturer name
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="modelNumber" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Manufacturer&apos;s model number.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="manufacturedDate" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Data asset was manufactured.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="serialNumber" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Serial number of asset.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lotNumber" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation><![CDATA[
								Even for the same model and version
								number, many assets are manufactured in
								lots. The lotNumber identifies the
								specific lot for this asset.
							]]></xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="testDate" type="xs:dateTime" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The date and time this asset was last
								tested .
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MeterAsset">
		<xs:complexContent>
			<xs:extension base="tns:Asset">
				<xs:sequence>
					<xs:element name="serviceType" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Gas, Water or Electric
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:choice>
						<xs:element name="electricMeter" type="tns:ElectricMeter" minOccurs="0"/>
						<xs:element name="waterMeter" type="tns:WaterMeter" minOccurs="0"/>
						<xs:element name="gasMeter" type="tns:GasMeter" minOccurs="0"/>
					</xs:choice>
					<xs:element name="numDigits" type="xs:integer" minOccurs="0">
						<xs:annotation>
							<xs:documentation><![CDATA[
								The number of dials on the meter
								register for an electromechanical meter;
								for an electronic meter, the number of
								digits on the meter display.
							]]></xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="typeMeter" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								diaphram, rotary or pulse
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ElectricMeter">
		<xs:sequence>
			<xs:element name="aepCode" type="xs:string" minOccurs="0"/>
			<xs:element name="form" type="xs:string" minOccurs="0"/>
			<xs:element name="base" type="xs:string" minOccurs="0"/>
			<xs:element name="voltageRating" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation><![CDATA[
						The service voltage at which the meter is
						designed to operate. Typical voltage ratings in
						North America are 120, 240, 277 or 480V.
					]]></xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="currentRating" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The current class of the meter. Typical current
						classes in North America are 10, 20, 100, 200,
						or 320 Amps.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="frequencyRating" type="xs:string" minOccurs="0"/>
			<xs:element name="numPhases" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>
						The number of phases for this service point.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="numWires" type="xs:string" minOccurs="0"/>
			<xs:element name="kh" type="xs:string" minOccurs="0"/>
			<xs:element name="registerRatio" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="WaterMeter">
		<xs:sequence>
			<xs:element name="inletDiameter" type="xs:string" minOccurs="0"/>
			<xs:element name="outletDiameter" type="xs:string" minOccurs="0"/>
			<xs:element name="operatingPressure" type="xs:string" minOccurs="0"/>
			<xs:element name="flowRange" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="GasMeter">
		<xs:sequence>
			<xs:element name="operatingPressure" type="xs:string" minOccurs="0"/>
			<xs:element name="flowRange" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ComFunction">
		<xs:complexContent>
			<xs:extension base="tns:Asset">
				<xs:sequence>
					<xs:element name="amrAddress" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation><![CDATA[
								The communication ID number (e.g. serial
								number, IP address, telephone number,
								etc.) of the AMR module which serves
								this meter.
							]]></xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="amrSystem" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The metering system responsible for
								communications to the meter.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ServiceLocation">
		<xs:complexContent>
			<xs:extension base="tns:ErpAddress">
				<xs:sequence>
					<xs:element name="nearestIntersection" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The names of streets at the nearest
								intersection to work area.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="subdivision" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Name, identifier, or description of the
								subdivision, if applicable, in which
								work is to occur.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lot" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Name, identifier, or description of the
								lot, if applicable, in which work is to
								occur.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="block" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Name, identifier, or description of the
								block, if applicable, in which work is
								to occur.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="locationType" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The type of location: geographical,
								functional accounting, other.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="locationCode" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								A codified representation of the
								location.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="latitude" type="xs:string" minOccurs="0"/>
					<xs:element name="longitude" type="xs:string" minOccurs="0"/>
					<xs:element name="locationAccuracy" type="xs:string" minOccurs="0"/>
					<xs:element name="locationAccuracyUnits" type="xs:string" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ErpAddress">
		<xs:complexContent>
			<xs:extension base="tns:IdentifiedObject">
				<xs:sequence>
					<xs:element name="streetNumber" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The designator of the specific location
								on the street.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="streetName" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The name of the street.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="streetSuffix" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Suffix to the street name. For examle,
								North, South, East, West.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="streetPrefix" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Prefix to the street name. For examle,
								North, South, East, West.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="streetType" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Type of street. Examples include:
								street, circle, boulevard, avenue, road,
								drive, etc.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="poBox" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The post office box.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="suiteNumber" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The number of the apartment or suite.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="addressGeneral" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Additional address information, for
								example a mailstop.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="city" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Name of city.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="stateOrProvince" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Name of the state or province.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="country" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Name of the country.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="postalCode" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Postal code for the address.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ServiceDeliveryPoint">
		<xs:complexContent>
			<xs:extension base="tns:IdentifiedObject">
				<xs:sequence>
					<xs:element name="serviceType" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								Service type: Gas, Water, Electric.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="lifeSupport" type="xs:boolean" minOccurs="0"/>
					<xs:element name="readRoute" type="tns:IdentifiedObject" minOccurs="0"/>
					<xs:element name="readSequence" type="xs:string" minOccurs="0"/>
					<xs:element name="averageDailyUsage" type="xs:double" minOccurs="0"/>
					<xs:element name="locationCode" type="xs:string"/>
					<xs:element name="serviceDeliveryRemarks" type="xs:string"/>
					<xs:element name="latitude" type="xs:double"/>
					<xs:element name="longitude" type="xs:double"/>
					<xs:element name="locationAccuracy" type="xs:string" minOccurs="0"/>
					<xs:element name="locationAccuracyUnits" type="xs:string" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ReadingType">
		<xs:sequence>
			<xs:element name="mRID" type="xs:string" minOccurs="0"/>
			<xs:element name="measurementType" type="xs:string" minOccurs="0"/>
			<xs:element name="touBinNumber" type="xs:string" minOccurs="0"/>
			<xs:element name="unit" type="xs:string" minOccurs="0"/>
			<xs:element name="touCode" type="xs:string" minOccurs="0"/>
			<xs:element name="channelNumber" type="xs:int" minOccurs="0"/>
			<xs:element name="logicalChannelNumber" type="xs:int" minOccurs="0"/>
			<xs:element name="aggregateTimePeriod" type="xs:string" minOccurs="0"/>
			<xs:element name="intervalLength" type="xs:int" minOccurs="0"/>
			<xs:element name="readSequence" type="xs:string" minOccurs="0"/>
			<xs:element name="precision" type="xs:int" minOccurs="0"/>
			<xs:element name="scale" type="xs:int" minOccurs="0"/>
			<xs:element name="direction" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ReadingTypeList">
		<xs:sequence>
			<xs:choice minOccurs="0">
				<xs:element name="readingTypeId" type="xs:string"/>
				<xs:element name="ReadingType" type="tns:ReadingType"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IntervalBlock">
		<xs:sequence>
			<xs:element name="readingTypeId" type="xs:string" minOccurs="0"/>
			<xs:element name="ReadingType" type="tns:ReadingType" minOccurs="0"/>
			<xs:element name="IReading" type="tns:IReading" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="IReading">
		<xs:sequence>
			<xs:element name="startTime" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="endTime" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="intervalLength" type="xs:int" minOccurs="0"/>
			<xs:element name="value" type="xs:double" minOccurs="0"/>
			<xs:element name="demandPeakTime" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="measurementSource" type="xs:string" minOccurs="0"/>
			<xs:element name="flags" type="xs:long" minOccurs="0"/>
			<xs:element name="status" type="xs:long" minOccurs="0"/>
			<xs:element name="collectionTime" type="xs:dateTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Reading">
		<xs:complexContent>
			<xs:extension base="tns:IReading">
				<xs:sequence>
					<xs:choice minOccurs="0">
						<xs:element name="readingTypeId" type="xs:string"/>
						<xs:element name="ReadingType" type="tns:ReadingType"/>
					</xs:choice>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="MeterReading">
		<xs:annotation>
			<xs:documentation>
				Only IntervalBlock element will be output in v1 of this
				service implementation.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ServiceDeliveryPoint" type="tns:ServiceDeliveryPoint" minOccurs="0"/>
			<xs:element name="Meter" type="tns:MeterAsset" minOccurs="0"/>
			<xs:element name="ComFunction" type="tns:ComFunction" minOccurs="0"/>
			<xs:element name="CustomerAccount" type="tns:CustomerAccount" minOccurs="0"/>
			<xs:element name="Reading" type="tns:Reading" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="IntervalBlock" type="tns:IntervalBlock" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="Event" type="tns:Event" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="MeterReading" type="tns:MeterReading"/>
	<xs:complexType name="MeterReadings">
		<xs:sequence>
			<xs:element name="startTime" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="endTime" type="xs:dateTime" minOccurs="0"/>
			<xs:element ref="tns:MeterReading" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="Event">
		<xs:sequence>
			<xs:element name="category" type="xs:string" minOccurs="0"/>
			<xs:element name="name" type="xs:string" minOccurs="0"/>
			<xs:element name="timestamp" type="xs:dateTime" minOccurs="0"/>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
			<xs:element name="argument" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:sequence>
						<xs:element name="name" type="xs:string"/>
						<xs:element name="value" type="xs:string"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="source" type="xs:string" minOccurs="0"/>
			<xs:element name="collectionTime" type="xs:dateTime" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>